<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f9;
            color: #333;
        }

        .container {
            max-width: 900px;
            margin: 50px auto;
            padding: 20px;
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
        }

        .header h1 {
            font-size: 2.5em;
            margin: 0;
        }

        .profile-info, .edit-profile {
            margin-bottom: 40px;
        }

        .profile-info .profile-item {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #ddd;
        }

        .profile-item:last-child {
            border-bottom: none;
        }

        .edit-profile {
            display: none;
            flex-direction: column;
            gap: 15px;
        }

        .buttons {
            margin-top: 20px;
            display: flex;
            justify-content: space-between;
        }

        .buttons button {
            background: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1em;
            transition: background 0.3s ease;
        }

        .buttons button:hover {
            background: #0056b3;
        }

        .buttons .logout {
            background: #dc3545;
        }

        .buttons .logout:hover {
            background: #a71d2a;
        }

        .events-section {
            margin-top: 40px;
        }

        .events-section h2 {
            margin-bottom: 20px;
        }

        .event-card {
            border: 1px solid #ddd;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 15px;
            background-color: #f9f9ff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .event-card h3 {
            margin: 0 0 10px;
            font-size: 1.2em;
        }

        .event-card p {
            margin: 5px 0;
            font-size: 0.95em;
            color: #555;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Welcome, <span id="user-name">User Name</span></h1>
        </div>
        
        <!-- Profile Info Section -->
        <div class="profile-info" id="profile-info">
            <div class="profile-item">
                <span>Name:</span>
                <span id="profile-name">John Doe</span>
            </div>
            <div class="profile-item">
                <span>College:</span>
                <span id="profile-college">Example College</span>
            </div>
            <div class="profile-item">
                <span>Year:</span>
                <span id="profile-year">3</span>
            </div>
            <div class="profile-item">
                <span>Accommodation:</span>
                <span id="profile-accommodation">Yes</span>
            </div>
        </div>

        <!-- Edit Profile Section -->
        <div class="edit-profile" id="edit-profile">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" required>

            <label for="college">College:</label>
            <input type="text" id="college" name="college" required>

            <label for="year">Year:</label>
            <input type="number" id="year" name="year" min="1" max="4" required>

            <label for="accommodation">Accommodation:</label>
            <select id="accommodation" name="accommodation" required>
                <option value="yes">Yes</option>
                <option value="no">No</option>
            </select>
        </div>

        <!-- Buttons -->
        <div class="buttons">
            <button id="edit-btn">Edit Profile</button>
            <button id="save-btn" style="display: none;">Save Changes</button>
            <button class="logout" onclick="location.href='/login.html'">Logout</button>
        </div>

        <!-- Events Section -->
        <div class="events-section">
            <h2>Registered Events</h2>
            <div id="registered-events">
                <p>Loading your registered events...</p>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Fetch user profile data
            fetch('/get-profile')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('user-name').textContent = data.name;
                    document.getElementById('profile-name').textContent = data.name;
                    document.getElementById('profile-college').textContent = data.college;
                    document.getElementById('profile-year').textContent = data.year;
                    document.getElementById('profile-accommodation').textContent = data.accommodation;

                    document.getElementById('name').value = data.name;
                    document.getElementById('college').value = data.college;
                    document.getElementById('year').value = data.year;
                    document.getElementById('accommodation').value = data.accommodation;
                })
                .catch(error => console.error('Error fetching profile:', error));

            // Fetch registered events
            fetch('/user/events')
                .then(response => response.json())
                .then(events => {
                    const eventsContainer = document.getElementById('registered-events');
                    if (events.length === 0) {
                        eventsContainer.innerHTML = '<p>No events registered yet.</p>';
                        return;
                    }

                    const eventCards = events.map(event => `
                        <div class="event-card">
                            <h3>${event.eventName}</h3>
                            <p>Type: ${event.type}</p>
                            <p>Venue: ${event.venue}</p>
                            <p>Date: ${new Date(event.date).toLocaleDateString()}</p>
                            <p>Time: ${event.time}</p>
                        </div>
                    `).join('');

                    eventsContainer.innerHTML = eventCards;
                })
                .catch(error => console.error('Error fetching events:', error));

            // Edit and save profile
            const editBtn = document.getElementById('edit-btn');
            const saveBtn = document.getElementById('save-btn');
            const profileInfo = document.getElementById('profile-info');
            const editProfile = document.getElementById('edit-profile');

            editBtn.addEventListener('click', () => {
                profileInfo.style.display = 'none';
                editProfile.style.display = 'flex';
                editBtn.style.display = 'none';
                saveBtn.style.display = 'inline-block';
            });

            saveBtn.addEventListener('click', () => {
                const formData = {
                    name: document.getElementById('name').value,
                    college: document.getElementById('college').value,
                    year: document.getElementById('year').value,
                    accommodation: document.getElementById('accommodation').value,
                };

                fetch('/update-profile', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(formData),
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.message) {
                            alert(data.message);
                            location.reload();
                        } else {
                            alert(data.error || 'An error occurred.');
                        }
                    })
                    .catch(error => console.error('Error:', error));
            });
        });
    </script>
</body>
</html>
